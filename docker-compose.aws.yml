# Docker Compose configuration for AWS deployment
# This file extends the base docker-compose.yml for AWS-specific settings

services:
  # PostgreSQL - Use RDS in production, this is just for testing
  postgres:
    image: postgres:15-alpine
    container_name: ferremas-postgres-aws
    environment:
      POSTGRES_DB: ${DB_NAME:-ferremas}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ferremas-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: ferremas-auth-service-aws
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-ferremas}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres123@postgres:5432/ferremas}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN}
      AWS_FRONTEND_URL: ${AWS_FRONTEND_URL}
      AWS_API_URL: ${AWS_API_URL}
      CUSTOM_DOMAIN: ${CUSTOM_DOMAIN}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - ferremas-network
    restart: unless-stopped

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: ferremas-product-service-aws
    environment:
      NODE_ENV: production
      PORT: 3002
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-ferremas}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres123@postgres:5432/ferremas}
      CORS_ORIGIN: ${CORS_ORIGIN}
      AWS_FRONTEND_URL: ${AWS_FRONTEND_URL}
      AWS_API_URL: ${AWS_API_URL}
      CUSTOM_DOMAIN: ${CUSTOM_DOMAIN}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL:-http://auth-service:3001}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
    ports:
      - "3002:3002"
    depends_on:
      - postgres
    networks:
      - ferremas-network
    restart: unless-stopped

  # Manager Service
  manager-service:
    build:
      context: ./services/manager-service
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: ferremas-manager-service-aws
    environment:
      NODE_ENV: production
      PORT: 3003
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-ferremas}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres123@postgres:5432/ferremas}
      CORS_ORIGIN: ${CORS_ORIGIN}
      AWS_FRONTEND_URL: ${AWS_FRONTEND_URL}
      AWS_API_URL: ${AWS_API_URL}
      CUSTOM_DOMAIN: ${CUSTOM_DOMAIN}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL:-http://auth-service:3001}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 5242880
      # S3 Configuration (optional)
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_REGION: ${AWS_S3_REGION}
    ports:
      - "3003:3003"
    depends_on:
      - postgres
    networks:
      - ferremas-network
    volumes:
      - uploads_data:/app/uploads
    restart: unless-stopped

  # Admin Service
  admin-service:
    build:
      context: ./services/admin-service
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: ferremas-admin-service-aws
    environment:
      NODE_ENV: production
      PORT: 3004
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-ferremas}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres123@postgres:5432/ferremas}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN}
      AWS_FRONTEND_URL: ${AWS_FRONTEND_URL}
      AWS_API_URL: ${AWS_API_URL}
      CUSTOM_DOMAIN: ${CUSTOM_DOMAIN}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL:-http://auth-service:3001}
    ports:
      - "3004:3004"
    depends_on:
      - postgres
    networks:
      - ferremas-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: ferremas-api-gateway-aws
    environment:
      NODE_ENV: production
      PORT: 3000
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL:-http://auth-service:3001}
      PRODUCT_SERVICE_URL: ${PRODUCT_SERVICE_URL:-http://product-service:3002}
      MANAGER_SERVICE_URL: ${MANAGER_SERVICE_URL:-http://manager-service:3003}
      ADMIN_SERVICE_URL: ${ADMIN_SERVICE_URL:-http://admin-service:3004}
      CORS_ORIGIN: ${CORS_ORIGIN}
      AWS_FRONTEND_URL: ${AWS_FRONTEND_URL}
      AWS_API_URL: ${AWS_API_URL}
      CUSTOM_DOMAIN: ${CUSTOM_DOMAIN}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - product-service
      - manager-service
      - admin-service
    networks:
      - ferremas-network
    volumes:
      - uploads_data:/app/uploads
    restart: unless-stopped

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ferremas-frontend-aws
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${AWS_API_URL:-https://api.your-app.example.com}
      AWS_INTERNAL_API_URL: ${AWS_INTERNAL_API_URL:-http://api-gateway:3000}
    ports:
      - "3001:3000"
    depends_on:
      - api-gateway
    networks:
      - ferremas-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  ferremas-network:
    driver: bridge